name: Weather viewer

on:
  push:
    branches:
      - main

jobs:
    test:
      runs-on: ubuntu-latest
      name: Run tests
      services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Run tests
        run: mvn clean test
    deploy:
      runs-on: ubuntu-latest
      needs: test
      services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_DB: weatherviewer
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        - name: Set up JDK
          uses: actions/setup-java@v2
          with:
            distribution: 'adopt'
            java-version: '8'
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
        - name: Pull Vercel environment information
          run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        - name: Build project artifacts
          run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy project artifacts
          run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --env POSTGRES_USER=${{ secrets.POSTGRES_USER }} --env POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}